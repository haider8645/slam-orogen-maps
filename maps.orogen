name "maps"
version "0.1"

using_library 'maps'
using_library 'traversability_generator3d'

import_types_from "base"
import_types_from "maps/grid/MLSConfig.hpp"
import_types_from "traversability_generator3d/SoilNode.hpp"

# define opaques
typekit do

    opaque_autogen '/maps/grid/GridMap</char>',
                    :includes => "maps/grid/GridMap.hpp",
                    :alias_name => '/maps/grid/GridMapC'

    opaque_autogen '/maps/grid/GridMap</int>',
                    :includes => "maps/grid/GridMap.hpp",
                    :alias_name => '/maps/grid/GridMapI'
                    
    opaque_autogen '/maps/grid/GridMap</float>',
                    :includes => "maps/grid/GridMap.hpp",
                    :alias_name => '/maps/grid/GridMapF'

    opaque_autogen '/maps/grid/GridMap</double>',
                    :includes => "maps/grid/GridMap.hpp",
                    :alias_name => '/maps/grid/GridMapD'

    opaque_autogen '/maps/grid/ElevationMap',
                    :includes => "maps/grid/ElevationMap.hpp"
         
    opaque_autogen '/maps/grid/MLSMap</maps/grid/MLSConfig/SLOPE>',
                    :includes => "maps/grid/MLSMap.hpp",
                    :alias_name => '/maps/grid/MLSMapSloped'

    opaque_autogen '/maps/grid/MLSMap</maps/grid/MLSConfig/KALMAN>',
                    :includes => "maps/grid/MLSMap.hpp",
                    :alias_name => '/maps/grid/MLSMapKalman'

    opaque_autogen '/maps/grid/MLSMap</maps/grid/MLSConfig/BASE>',
                    :includes => "maps/grid/MLSMap.hpp",
                    :alias_name => '/maps/grid/MLSMapBase'

    opaque_autogen '/maps/grid/MLSMap</maps/grid/MLSConfig/PRECALCULATED>',
                    :includes => "maps/grid/MLSMap.hpp",
                    :alias_name => '/maps/grid/MLSMapPrecalculated'

    opaque_autogen '/maps/geometric/GeometricMap</maps/geometric/LineSegment3d>',
                    :includes => "maps/geometric/ContourMap.hpp",
                    :alias_name => '/maps/geometric/ContourMap'

    opaque_autogen '/maps/grid/OccupancyGridMap',
                    :includes => "maps/grid/OccupancyGridMap.hpp"

    opaque_autogen '/maps/grid/TraversabilityGrid',
                    :includes => "maps/grid/TraversabilityGrid.hpp"

    opaque_autogen '/maps/grid/TSDFVolumetricMap',
                    :includes => "maps/grid/TSDFVolumetricMap.hpp"

    opaque_autogen '/maps/grid/TraversabilityMap3d</maps/grid/TraversabilityNodeBase *>',
                    :includes => "maps/grid/TraversabilityMap3d.hpp",
                    :alias_name => '/maps/grid/TraversabilityBaseMap3d'

    opaque_autogen '/maps/grid/TraversabilityMap3d</traversability_generator3d/SoilNode *>',
                    :includes => "maps/grid/TraversabilityMap3d.hpp",
                    :includes => "traversability_generator3d/SoilNode.hpp",
                    :alias_name => '/traversability_generator3d/SoilMap3d'
end

maps = ['/maps/grid/GridMap</char>',
        '/maps/grid/GridMap</int>',
        '/maps/grid/GridMap</float>',
        '/maps/grid/GridMap</double>',
        '/maps/grid/ElevationMap',
        '/maps/grid/MLSMap</maps/grid/MLSConfig/BASE>',
        '/maps/grid/MLSMap</maps/grid/MLSConfig/SLOPE>',
        '/maps/grid/MLSMap</maps/grid/MLSConfig/KALMAN>',
        '/maps/grid/MLSMap</maps/grid/MLSConfig/PRECALCULATED>',
        '/maps/geometric/GeometricMap</maps/geometric/LineSegment3d>',
        '/maps/grid/OccupancyGridMap',
        '/maps/grid/TraversabilityGrid',
        '/maps/grid/TSDFVolumetricMap',
        '/maps/grid/TraversabilityBaseMap3d',
        '/traversability_generator3d/SoilMap3d']

# type exports
typekit do
    export_types *maps
end

# Abstract map laoder for MLS maps.
task_context "MLSMapLoader" do

    output_port('cloud', '/base/samples/Pointcloud')
    .doc("The point cloud that was loaded from file.")

    property('path', 'std/string')
    .doc("File location of the PLY to load.")

    property('resolution', 'double', 0.1)
    .doc("Cell size of the generated MLS map.")

    property('mls_config', 'maps/grid/MLSConfig')
    .doc("Parameters of the generated MLS map.")

    operation('publishMap')
   	.returns("bool")
    .doc("Writes the map to the port.")

    periodic(1.0)
end

# Loads a pointcloud from a ply file and generates a MLS<KALMAN> from it.
task_context "MLSMapKalmanLoader", subclasses: "MLSMapLoader" do    
    output_port('map', '/maps/grid/MLSMap</maps/grid/MLSConfig/KALMAN>')
    .doc("Generated MLS map, request via publishMap operation.")
end

# Loads a pointcloud from a ply file and generates a MLS<SLOPE> from it.
task_context "MLSMapSlopeLoader", subclasses: "MLSMapLoader" do
    output_port('map', '/maps/grid/MLSMap</maps/grid/MLSConfig/SLOPE>')
    .doc("Generated MLS map, request via publishMap operation.")
end

